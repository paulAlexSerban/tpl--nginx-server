name: CI Develop Nginx Frontend
on:
  workflow_call:

jobs:
  lint-frontend-nginx:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Verify if there were changes in ./docker or *.Dockerfile
      - name: "🔍  Verify Changed Frontend Nginx Files"
        uses: tj-actions/changed-files@v23.1
        id: changed-frontend-nginx-files
        with:
          files: |
              frontend/nginx/**/*

      # Cache node_modules to speed up things if there were changes in ./docker or *.Dockerfile
      - name: "Cache node_modules"
        if: steps.changed-frontend-nginx-files.outputs.any_changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install NodeJS & npm if there were changes in ./docker or *.Dockerfile
      - name: "🔧  Setup NodeJS 14.19.1"
        if: steps.changed-frontend-nginx-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.1

      - name: "🔧  Install npm@latest"
        if: steps.changed-frontend-nginx-files.outputs.any_changed == 'true'
        run: npm i -g npm@latest

      # Install DEV dependencies if there are changes detected
      - name: "📦  Install Nginx Development dependencies"
        if: steps.changed-frontend-nginx-files.outputs.any_changed == 'true'
        run: npm run install:nginx

      # Build all projects files to be used in docker images if changes are detected
      - name: "🏗️  Build Frontend Nginx"
        if: steps.changed-frontend-nginx-files.outputs.any_changed == 'true'
        run: npm run build:nginx