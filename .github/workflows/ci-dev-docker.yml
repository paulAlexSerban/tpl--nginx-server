name: Docker
on:
  push:
    branches-ignore:
      - release
      - main
      - develop

  workflow_call:

jobs:
  test-docker:
    name: Test Docker
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "🔍  Verify Changed Nginx files ./docker or *.Dockerfile"
        uses: tj-actions/changed-files@v23.1
        id: changed-nginx-docker
        with:
          files: |
              docker/*.nginx.yml
              **/nginx.Dockerfile

      - name: "Cache node_modules"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "🔧  Setup NodeJS 14.19.1"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.19.1

      - name: "🔧  Install npm@latest"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        run: npm i -g npm@latest

      - name: "🐳  Start Nginx Docker Containers"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        run: bash scripts/docker-start-nginx-server.bash  
  
      - name: "🧪  List running containers"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        run: docker ps -a
  
      - name: "🧪 Test Nginx container"
        if: steps.changed-nginx-docker.outputs.any_changed == 'true'
        run: bash scripts/docker-test-curl-nginx-server.bash

