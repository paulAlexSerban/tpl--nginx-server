{
  "name": "tpl--nginx-server",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "🧪 🧪 🧪 🧪": "TEST",
    "test": "echo \"Error: no test specified\"",
    "test:container:nginx": "bash package-scripts.bash testCurlNginxContainer",
    "📦 📦 📦 📦": "INSTALL DEPENDENCIES",
    "install:ci": "npm ci --omit=dev --ignore-scripts",
    "install:root": "npm install",
    "install:nginx": "npm --prefix frontend/nginx install",
    "install:all": "bash package-scripts.bash installAll",
    "prepare": "husky install",
    "🏗️ 🏗️ 🏗️ 🏗️": "BUILD",
    "build:nginx": "npm --prefix frontend/nginx run build",
    "👀 👀 👀 👀": "WATCH",
    "watch:nginx": "npm --prefix frontend/nginx run watch",
    "🐳  🟢  🐳  🟢 ": "START - Docker Compose",
    "start:compose:nginx": "bash package-scripts.bash startComposeNginx",
    "🛑  🐳  🛑  🐳": "STOP - Docker Compose",
    "stop:compose:all": "bash package-scripts.bash stopComposeAll",
    "stop:compose:nginx": "bash package-scripts.bash stopComposeNginx",
    "📦  🟢  📦  🟢  📦  🟢 ": "PACKAGE",
    "package:clean": "rm -rfv ./docs",
    "package:nginx": "npm run package:clean && mkdir -p docs/nginx && cp -rfv frontend/nginx/dist/* ./docs/nginx"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/paulAlexSerban/tpl--nginx-server.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/paulAlexSerban/tpl--nginx-server/issues"
  },
  "homepage": "https://github.com/paulAlexSerban/tpl--nginx-server#readme",
  "devDependencies": {
    "@commitlint/cli": "^16.2.4",
    "@commitlint/config-conventional": "^16.2.4",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^7.0.4"
  },
  "dependencies": {
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.0.4",
    "@semantic-release/npm": "^9.0.1",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "semantic-release": "^19.0.2"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "prepare-commit-msg": "exec < /dev/tty && npx cz --hook || true"
    }
  }
}
